"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useStateWithHistory = void 0;
const react_1 = require("react");
function useStateWithHistory(defaultValue, { capacity = 10 } = {}) {
    const [value, setValue] = (0, react_1.useState)(defaultValue);
    const historyRef = (0, react_1.useRef)([value]);
    const pointerRef = (0, react_1.useRef)(0);
    const set = (0, react_1.useCallback)((v) => {
        const resolvedValue = typeof v === 'function' ? v(value) : v;
        if (historyRef.current[pointerRef.current] !== resolvedValue) {
            if (pointerRef.current < historyRef.current.length - 1) {
                historyRef.current.splice(pointerRef.current + 1);
            }
            historyRef.current.push(resolvedValue);
            while (historyRef.current.length > capacity) {
                historyRef.current.shift();
            }
            pointerRef.current = historyRef.current.length - 1;
        }
        setValue(resolvedValue);
    }, [capacity, value]);
    const back = (0, react_1.useCallback)(() => {
        if (pointerRef.current <= 0)
            return;
        pointerRef.current--;
        setValue(historyRef.current[pointerRef.current]);
    }, []);
    const forward = (0, react_1.useCallback)(() => {
        if (pointerRef.current >= historyRef.current.length - 1)
            return;
        pointerRef.current++;
        setValue(historyRef.current[pointerRef.current]);
    }, []);
    const go = (0, react_1.useCallback)((index) => {
        if (index < 0 || index >= historyRef.current.length - 1)
            return;
        pointerRef.current = index;
        setValue(historyRef.current[pointerRef.current]);
    }, []);
    return [
        value,
        set,
        {
            history: historyRef.current,
            pointer: pointerRef.current,
            back,
            forward,
            go,
        },
    ];
}
exports.useStateWithHistory = useStateWithHistory;
//# sourceMappingURL=useStateWithHistory.js.map